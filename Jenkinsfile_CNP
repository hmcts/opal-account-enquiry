#!groovy

@Library("Infrastructure")

def type = "java"
def product = "opal"
def component = "fines-service"

withPipeline(type, product, component) {
  afterAlways('smokeTest:dev') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-test-report/**/*'
  }

  afterAlways('smokeTest:stg') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-test-report/**/*'
  }

  afterAlways('functionalTest:dev') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functionalOpal-test-report/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functionalLegacy-test-report/**/*'

  }

  afterAlways('functionalTest:stg') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functionalOpal-test-report/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functionalLegacy-test-report/**/*'

  }
}
